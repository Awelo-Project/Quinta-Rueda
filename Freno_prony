#include "derivative.h" /* include peripheral declarations */


unsigned char secuencia_canales[]={(1<<6)+8,(1<<6)+9,(1<<6)+12};
unsigned char resultado_canales[3];
unsigned char ADC_selector=0;
unsigned char temperatura_antes;
unsigned char temperatura;
unsigned short corriente; 
unsigned char extra;
unsigned short tv=0;
unsigned long frecuencia;
unsigned short velocidad_w;
unsigned char cont_UART;


void ADC0_IRQHandler()
{
	resultado_canales[ADC_selector++]=ADC0_RA; //Resultado ADC
	if (ADC_selector==2) ADC_selector=0;
	temperatura_antes=resultado_canales[0];
	temperatura=((((temperatura_antes*3300)/255))/10)+9;
	//corriente=resultado_canales[1];
	corriente=((resultado_canales[1]*3300)/255)/10;
	//extra=((resultado_canales[2]*3300)/255)/10;
	NVIC_ISER=(1<<12);
	
}

void UART0_IRQHandler()
{

		UART0_D=resultado_canales[cont_UART++];
		if (cont_UART>=2)
		{
			cont_UART=0;
		}
		NVIC_ICER=(1<<12);		
}

void PIT_IRQHandler()
{
	if (PIT_TFLG0==1)
	{
	PIT_TFLG0=1; //Apaga bandera
	ADC0_SC1A=secuencia_canales[ADC_selector];
	}
	
	if (PIT_TFLG1==1)
	{
	}
	
}

void FTM0_IRQHandler()
{
	unsigned short periodo;
	if ((TPM0_C0SC & (1<<7))==(1<<7))
	{
		TPM0_C0SC |=(1<<7);
	}

	if ((TPM0_C2SC & (1<<7))==(1<<7))
	{
		TPM0_C2SC |=(1<<7);
		periodo=(TPM0_C2V-tv);
		//frecuencia=1/periodo
		frecuencia=(1000000/periodo)/4;
		velocidad_w=(((frecuencia*1000)/400)*60)/1000;// normalizado a 1000
		tv=TPM0_C2V;
		resultado_canales[2]=velocidad_w;
	}

}

void UART_init(void)
{
	SIM_SCGC5=(1<<9); 	// reloj de interfaz del PORTA
	PORTA_PCR1=(2<<8); 	//MUX = 2 UART
	PORTA_PCR2=(2<<8); 	//MUX = 2 UART
	
	SIM_SCGC4=(1<<10);	 //reloj de interfaz para UART0
	UART0_BDL=26; 	// SBR=26, 96000 bits por segundo, clk UART=4MHz
}

void clk_init (void)
{
	// FIRC = 4 MHz. BusClk = 4 MHz
	// UART0: FIRC. UART1: BusClk. UART2: BusClk. TPM: FIRC. IIC: BusClk. PIT:
	MCG_C1|=(1<<6) + (1<<1); //MCGOUTCLK : IRCLK. CG: Clock gate, MCGIRCLK enable pag 116
	MCG_C2|=1; //Mux IRCLK : FIRC (4 MHz) pag 116
	MCG_SC=0; //Preescaler FIRC 1:1 pag 116
	SIM_CLKDIV1=0; //OUTDIV4=OUTDIV1= 1:1 pag 116. Busclk 4 MHz
	SIM_SOPT2|=15<<24; //Seleccion MCGIRCLK tanto para UART0 como para TPM
}

int main(void)
{
	clk_init();
	//Para pines de ADC el valor de PCR es default
	SIM_SCGC6|=(1<<27); //ADC0
	
	SIM_SCGC6|=(1<<23); //PIT
	PIT_MCR=0;
	PIT_LDVAL0=100000;  //100 ms entre cada channel, clk : 4 MHz
	PIT_TCTRL0=3; //TEN=1, TIEN=1

	
	SIM_SCGC5|=(1<<9);    //PORTA
	PORTA_PCR5=(3<<8);    //TPM0_CH2
	
	SIM_SCGC6|=(1<<24);	  //TPM0
	TPM0_SC=(1<<3)+4;	  //CMOD=1 (4 mHz), preescaler 16
	TPM0_C2SC=(2<<2)+(1<<6);     //input capture, falling edge, CHIE=1
	
	UART_init();
	
    NVIC_ISER=(1<<17);    // Intr NVIC TPM0
	NVIC_ISER=(1<<22); //Intr PIT
	NVIC_ISER=(1<<15); //Hab intr NVIC ADC
	
	while (1);
	return 0;
}
